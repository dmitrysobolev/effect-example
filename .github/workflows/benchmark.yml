name: Performance Benchmarks

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  benchmark:
    name: Run Performance Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download baseline from main branch
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          git fetch origin main
          git show origin/main:.benchmark-baseline.json > .benchmark-baseline.json 2>/dev/null || echo "No baseline found on main branch"

      - name: Run benchmarks
        id: benchmark
        run: |
          npm run benchmark > benchmark-output.txt 2>&1 || true
          cat benchmark-output.txt

      - name: Check for regressions
        if: github.event_name == 'pull_request'
        run: |
          if grep -q "Performance regressions detected" benchmark-output.txt; then
            echo "::error::Performance regressions detected! See benchmark output above."
            exit 1
          fi

      - name: Save benchmark results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            benchmark-output.txt
            .benchmark-baseline.json
          retention-days: 30

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let output = '';
            try {
              output = fs.readFileSync('benchmark-output.txt', 'utf8');
            } catch (error) {
              output = 'Could not read benchmark output';
            }

            // Truncate if too long for comment
            const maxLength = 60000;
            if (output.length > maxLength) {
              output = output.substring(0, maxLength) + '\n\n... (truncated)';
            }

            const body = `## ðŸ“Š Performance Benchmark Results

            \`\`\`
            ${output}
            \`\`\`

            *Benchmarks ran on ${process.env.RUNNER_OS} with Node.js ${process.env.NODE_VERSION}*
            `;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Performance Benchmark Results')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

      - name: Update baseline on main branch
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          npm run benchmark -- --save-baseline
          if [ -f .benchmark-baseline.json ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .benchmark-baseline.json
            git diff --staged --quiet || git commit -m "Update performance baseline [skip ci]"
            git push
          fi
